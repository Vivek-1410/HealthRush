{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkkr1\\\\Desktop\\\\webprograming full stack project\\\\webprograming full stack project\\\\reminder\\\\src\\\\AlarmPage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './AlarmPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AlarmPage({\n  reminder,\n  onStop\n}) {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handleStartAlarm = () => {\n    const audio = audioRef.current;\n    if (audio) {\n      audio.play().then(() => setIsPlaying(true)).catch(err => {\n        console.error(\"Autoplay failed:\", err);\n        document.addEventListener('click', handleStartAlarm, {\n          once: true\n        });\n      });\n    }\n  };\n  const handleStopAlarm = () => {\n    const audio = audioRef.current;\n    if (audio) {\n      audio.pause();\n      audio.currentTime = 0;\n    }\n    setIsPlaying(false);\n    onStop();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alarm-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It's time to take your \", reminder.medicineName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: \"https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3\",\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reminder-button start\",\n      onClick: handleStartAlarm,\n      children: \"Start Alarm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reminder-button stop\",\n      onClick: handleStopAlarm,\n      children: \"Stop Alarm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AlarmPage, \"4LVZylOngeaGuZM9rB5Sj0PYDg8=\");\n_c = AlarmPage;\nexport default AlarmPage;\nvar _c;\n$RefreshReg$(_c, \"AlarmPage\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","AlarmPage","reminder","onStop","_s","audioRef","isPlaying","setIsPlaying","handleStartAlarm","audio","current","play","then","catch","err","console","error","document","addEventListener","once","handleStopAlarm","pause","currentTime","className","children","medicineName","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","loop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vkkr1/Desktop/webprograming full stack project/webprograming full stack project/reminder/src/AlarmPage.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './AlarmPage.css';\r\n\r\nfunction AlarmPage({ reminder, onStop }) {\r\n  const audioRef = useRef(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const handleStartAlarm = () => {\r\n    const audio = audioRef.current;\r\n    if (audio) {\r\n      audio.play()\r\n        .then(() => setIsPlaying(true))\r\n        .catch(err => {\r\n          console.error(\"Autoplay failed:\", err);\r\n          document.addEventListener('click', handleStartAlarm, { once: true });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleStopAlarm = () => {\r\n    const audio = audioRef.current;\r\n    if (audio) {\r\n      audio.pause();\r\n      audio.currentTime = 0;\r\n    }\r\n    setIsPlaying(false);\r\n    onStop();\r\n  };\r\n\r\n  return (\r\n    <div className=\"alarm-page\">\r\n      <h2>It's time to take your {reminder.medicineName}!</h2>\r\n      <audio ref={audioRef} src=\"https://assets.mixkit.co/sfx/preview/mixkit-alarm-digital-clock-beep-989.mp3\" loop />\r\n      {!isPlaying ? (\r\n        <button className=\"reminder-button start\" onClick={handleStartAlarm}>\r\n          Start Alarm\r\n        </button>\r\n      ) : (\r\n        <button className=\"reminder-button stop\" onClick={handleStopAlarm}>\r\n          Stop Alarm\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlarmPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,KAAK,GAAGJ,QAAQ,CAACK,OAAO;IAC9B,IAAID,KAAK,EAAE;MACTA,KAAK,CAACE,IAAI,CAAC,CAAC,CACTC,IAAI,CAAC,MAAML,YAAY,CAAC,IAAI,CAAC,CAAC,CAC9BM,KAAK,CAACC,GAAG,IAAI;QACZC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;QACtCG,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEV,gBAAgB,EAAE;UAAEW,IAAI,EAAE;QAAK,CAAC,CAAC;MACtE,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMX,KAAK,GAAGJ,QAAQ,CAACK,OAAO;IAC9B,IAAID,KAAK,EAAE;MACTA,KAAK,CAACY,KAAK,CAAC,CAAC;MACbZ,KAAK,CAACa,WAAW,GAAG,CAAC;IACvB;IACAf,YAAY,CAAC,KAAK,CAAC;IACnBJ,MAAM,CAAC,CAAC;EACV,CAAC;EAED,oBACEH,OAAA;IAAKuB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBxB,OAAA;MAAAwB,QAAA,GAAI,yBAAuB,EAACtB,QAAQ,CAACuB,YAAY,EAAC,GAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxD7B,OAAA;MAAO8B,GAAG,EAAEzB,QAAS;MAAC0B,GAAG,EAAC,8EAA8E;MAACC,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/G,CAACvB,SAAS,gBACTN,OAAA;MAAQuB,SAAS,EAAC,uBAAuB;MAACU,OAAO,EAAEzB,gBAAiB;MAAAgB,QAAA,EAAC;IAErE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAET7B,OAAA;MAAQuB,SAAS,EAAC,sBAAsB;MAACU,OAAO,EAAEb,eAAgB;MAAAI,QAAA,EAAC;IAEnE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAzCQH,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA2ClB,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}