{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkkr1\\\\Desktop\\\\webprograming full stack project\\\\webprograming full stack project\\\\reminder\\\\src\\\\ReminderList.js\";\nimport React from 'react';\nimport './ReminderList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReminderList({\n  reminders,\n  onDelete\n}) {\n  const getNextDueDate = reminder => {\n    const now = new Date();\n    const [h, m] = reminder.reminderTime.split(':').map(Number);\n    const target = new Date();\n    target.setHours(h, m, 0, 0);\n    if (target < now) {\n      if (reminder.frequency === 'daily') {\n        target.setDate(target.getDate() + 1);\n      } else if (reminder.frequency === 'weekly') {\n        target.setDate(target.getDate() + 7);\n      } else if (reminder.frequency === 'custom' && reminder.customDays.length > 0) {\n        const currentDay = now.getDay();\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const daysToAdd = reminder.customDays.map(day => dayNames.indexOf(day)).sort((a, b) => a - b).find(dayIndex => dayIndex > currentDay) || 7 - currentDay + reminder.customDays.map(day => dayNames.indexOf(day)).sort((a, b) => a - b)[0];\n        target.setDate(target.getDate() + daysToAdd);\n      }\n    }\n    return target.toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminder-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"reminder-list-items\",\n      children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"no-reminders\",\n        children: \"No reminders set!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : reminders.map(reminder => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"reminder-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reminder-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"medicine-name\",\n            children: reminder.medicineName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"due-date\",\n            children: [\"Due: \", getNextDueDate(reminder)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"frequency\",\n            children: [\"(\", reminder.frequency, `reminder.frequency === 'custom' && reminder.customDays.length > 0 &&\n                    : ${reminder.customDays.join(', ')}`, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: () => onDelete(reminder.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, reminder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = ReminderList;\nexport default ReminderList;\nvar _c;\n$RefreshReg$(_c, \"ReminderList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ReminderList","reminders","onDelete","getNextDueDate","reminder","now","Date","h","m","reminderTime","split","map","Number","target","setHours","frequency","setDate","getDate","customDays","length","currentDay","getDay","dayNames","daysToAdd","day","indexOf","sort","a","b","find","dayIndex","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","medicineName","join","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/vkkr1/Desktop/webprograming full stack project/webprograming full stack project/reminder/src/ReminderList.js"],"sourcesContent":["import React from 'react';\r\nimport './ReminderList.css';\r\n\r\nfunction ReminderList({ reminders, onDelete }) {\r\n  const getNextDueDate = (reminder) => {\r\n    const now = new Date();\r\n    const [h, m] = reminder.reminderTime.split(':').map(Number);\r\n    const target = new Date();\r\n    target.setHours(h, m, 0, 0);\r\n    if (target < now) {\r\n      if (reminder.frequency === 'daily') {\r\n        target.setDate(target.getDate() + 1);\r\n      } else if (reminder.frequency === 'weekly') {\r\n        target.setDate(target.getDate() + 7);\r\n      } else if (reminder.frequency === 'custom' && reminder.customDays.length > 0) {\r\n        const currentDay = now.getDay();\r\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const daysToAdd = reminder.customDays\r\n          .map(day => dayNames.indexOf(day))\r\n          .sort((a, b) => a - b)\r\n          .find(dayIndex => dayIndex > currentDay) || \r\n          (7 - currentDay + reminder.customDays.map(day => dayNames.indexOf(day)).sort((a, b) => a - b)[0]);\r\n        target.setDate(target.getDate() + daysToAdd);\r\n      }\r\n    }\r\n    \r\n    return target.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminder-list\">\r\n      <h2>All Reminders</h2>\r\n      <ul className=\"reminder-list-items\">\r\n        {reminders.length === 0 ? (\r\n          <li className=\"no-reminders\">No reminders set!</li>\r\n        ) : (\r\n          reminders.map((reminder) => (\r\n            <li key={reminder.id} className=\"reminder-list-item\">\r\n              <div className=\"reminder-info\">\r\n                <span className=\"medicine-name\">{reminder.medicineName}</span>\r\n                <span className=\"due-date\">Due: {getNextDueDate(reminder)}</span>\r\n                <span className=\"frequency\">\r\n                  ({reminder.frequency}\r\n                  {`reminder.frequency === 'custom' && reminder.customDays.length > 0 &&\r\n                    : ${reminder.customDays.join(', ')}`}\r\n                  )\r\n                </span>\r\n              </div>\r\n              <button \r\n                className=\"delete-btn\" \r\n                onClick={() => onDelete(reminder.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReminderList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}